/*
 * Copyright 2021 Grabtaxi Holdings PTE LTD (GRAB)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import com.android.build.gradle.BaseExtension
import org.jetbrains.kotlin.gradle.dsl.KotlinJvmCompile

buildscript {
    apply from: "constants.gradle"
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath libs.kotlin.gradle.plugin
        classpath libs.android.gradle.plugin
        classpath "com.grab:grazel:$versionName"
        classpath libs.google.firebase.crashlytics
        classpath libs.google.mobile.services
    }
}

plugins {
    id "idea"
}

apply plugin: "com.grab.grazel"

allprojects {
    repositories {
        google()
        mavenCentral()
    }
    group groupId
    version versionName

    configurations.configureEach {
        resolutionStrategy {
            // Force a dependency to test if Grazel picks it up correctly.
            force "com.google.dagger:dagger:2.29"
            force "com.google.dagger:dagger-compiler:2.29"
        }
    }

    plugins.withType(com.android.build.gradle.BasePlugin).configureEach { plugin ->
        (project.extensions.getByName("android") as BaseExtension).compileOptions {
            sourceCompatibility = JavaVersion.VERSION_11
            targetCompatibility = JavaVersion.VERSION_11
        }
    }

    tasks.withType(JavaCompile).configureEach { task ->
        task.sourceCompatibility = JavaVersion.VERSION_11
        task.targetCompatibility = JavaVersion.VERSION_11
    }

    tasks.withType(KotlinJvmCompile).configureEach {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
}

tasks.named("wrapper") {
    gradleVersion = libs.versions.gradle.wrapper.get()
    distributionType = Wrapper.DistributionType.ALL
}

grazel {
    android {
        dexShards = 5
        multiDexEnabled = true
        incrementalDexing = true
        variantFilter { variant ->
            if (variant.name != "flavor1Debug" && variant.name != "debug" && variant.name != "debugUnitTest") {
                variant.setIgnore(true)
            }
        }
        features {
            dataBinding = true
            dataBindingMetaData = true
        }
        ndkApiLevel = 30
    }
    dependencies {
        overrideArtifactVersions.add("androidx.constraintlayout:constraintlayout:1.1.2")
    }
    rules {
        test {
            enableTestMigration = true
            detectSourceSets = true
        }
        bazelCommon {
            gitRepository {
                commit = "56a1877335972df9714a23e48c79bd04cc24cdd1"
                remote = "https://github.com/grab/grab-bazel-common.git"
            }
            toolchains {
                buildifier {
                    releaseVersion = "5.1.0"
                    supportedOs = ["linux", "darwin"]
                    supportedArch = ["amd64", "arm64"]
                }
            }
        }
        googleServices {
            crashlytics {
                buildId = "042cb4d8-56f8-41a0-916a-9da28e94d1ba"
            }
        }
        mavenInstall {
            httpArchiveRepository {
                sha256 = "f36441aa876c4f6427bfb2d1f2d723b48e9d930b62662bf723ddfb8fc80f0140"
                stripPrefix = "rules_jvm_external-4.1"
                url = "https://github.com/bazelbuild/rules_jvm_external/archive/4.1.zip"
            }
            resolveTimeout = 1000
            excludeArtifactsDenyList.add("androidx.constraintlayout:constraintlayout-core")
            excludeArtifacts.add("androidx.test.espresso:espresso-contrib")
            jetifyIncludeList.add("com.android.support:cardview-v7")
            jetifyExcludeList.add("androidx.appcompat:appcompat")
            artifactPinning {
                enabled.set(true)
            }
            overrideTargetLabels.putAll(
                ["androidx.appcompat:appcompat": "@//third_party:androidx_appcompat_appcompat"]
            )
            versionConflictPolicy = "pinned"
        }
        kotlin {
            httpArchiveRepository {
                url = "https://github.com/bazelbuild/rules_kotlin/releases/download/v1.7.0-RC-3/rules_kotlin_release.tgz"
                sha256 = "f033fa36f51073eae224f18428d9493966e67c27387728b6be2ebbdae43f140e"
            }
            compiler {
                tag = "1.6.10"
                sha = "432267996d0d6b4b17ca8de0f878e44d4a099b7e9f1587a98edc4d27e76c215a"
            }
            toolchain {
                enabled = true
                apiVersion = "1.6"
                reportUnusedDeps = "off"
                strictKotlinDeps = "off"
                abiJars = true
                multiplexWorkers = true
                languageVersion = "1.6"
                jvmTarget = "11"
            }
        }
        dagger {
            tag = "2.37"
            sha = "0f001ed38ed4ebc6f5c501c20bd35a68daf01c8dbd7541b33b7591a84fcc7b1c"
        }
    }
}

idea {
    module {
        excludeDirs += [
            file("bazel-bin"),
            file("bazel-grazel"),
            file("bazel-cache"),
            file("bazel-out"),
            file("bazel-testlogs"),
        ]
    }
}
