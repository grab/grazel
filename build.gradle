/*
 * Copyright 2022 Grabtaxi Holdings PTE LTD (GRAB)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import com.android.build.gradle.BaseExtension

buildscript {
    apply from: "constants.gradle"
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath libs.kotlin.gradle.plugin
        classpath libs.android.gradle.plugin
        classpath libs.google.firebase.crashlytics
        classpath libs.google.mobile.services
        classpath "com.grab:grazel:$versionName"
    }
}

plugins {
    id "idea"
}
apply plugin: "com.grab.grazel"

allprojects {
    repositories {
        google()
        mavenCentral()
    }
    group groupId
    version versionName

    configurations.configureEach {
        resolutionStrategy {
            // Force a dependency to test if Grazel picks it up correctly.
            force "com.google.dagger:dagger:2.47"
            force "com.google.dagger:dagger-compiler:2.47"
        }
    }

    plugins.withType(com.android.build.gradle.BasePlugin).configureEach { plugin ->
        (project.extensions.getByName("android") as BaseExtension).compileOptions {
            sourceCompatibility = JavaVersion.VERSION_11
            targetCompatibility = JavaVersion.VERSION_11
        }
    }

    tasks.withType(JavaCompile).configureEach { task ->
        task.sourceCompatibility = JavaVersion.VERSION_11
        task.targetCompatibility = JavaVersion.VERSION_11
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompilationTask.class).configureEach {
        compilerOptions.jvmTarget.set(org.jetbrains.kotlin.gradle.dsl.JvmTarget.JVM_11)
        compilerOptions.languageVersion = org.jetbrains.kotlin.gradle.dsl.KotlinVersion.KOTLIN_1_7
    }
}

tasks.named("wrapper") {
    gradleVersion = libs.versions.gradle.wrapper.get()
    distributionType = Wrapper.DistributionType.ALL
}

grazel {
    android {
        // dexShards = 5
        multiDexEnabled = true
        incrementalDexing = true
        variantFilter { variant ->
            variant.setIgnore(variant.buildType.name != "debug")
        }
        features {
            dataBindingMetaData = true
        }
        ndkApiLevel = 30
    }
    dependencies {
        overrideArtifactVersions.addAll(
            "androidx.constraintlayout:constraintlayout:2.1.4",
            "androidx.annotation:annotation:1.7.0-alpha03"
        )
    }
    rules {
        test {
            enableTestMigration = true
            detectSourceSets = true
        }
        bazelCommon {
            gitRepository {
                commit = "7415aab81c8cfec7ea05bb9bcb2b16d595bbc88e"
                remote = "https://github.com/grab/grab-bazel-common.git"
            }
            toolchains {
                buildifier {
                    releaseVersion = "v6.1.2"
                    supportedOs = ["linux", "darwin"]
                    supportedArch = ["amd64", "arm64"]
                }
            }
        }
        googleServices {
            crashlytics {
                buildId = "042cb4d8-56f8-41a0-916a-9da28e94d1ba"
            }
            gitRepository {
                commit = "7224f55d7fafe12a72066eb1a2ad1e1526a854c4"
                remote = "https://github.com/bazelbuild/tools_android.git"
            }
        }
        mavenInstall {
            httpArchiveRepository {
                sha256 = "f86fd42a809e1871ca0aabe89db0d440451219c3ce46c58da240c7dcdc00125f"
                stripPrefix = "rules_jvm_external-5.2"
                url = "https://github.com/bazelbuild/rules_jvm_external/releases/download/5.2/rules_jvm_external-5.2.tar.gz"
            }
            includeCredentials = false
            resolveTimeout = 1000
            excludeArtifactsDenyList.add("androidx.constraintlayout:constraintlayout-core")
            excludeArtifacts.add("androidx.test.espresso:espresso-contrib")
            jetifyIncludeList.add("com.android.support:cardview-v7")
            jetifyExcludeList.add("androidx.appcompat:appcompat")
            artifactPinning {
                enabled.set(false)
            }
            overrideTargetLabels.putAll(
                // Workaround for https://issuetracker.google.com/issues/285353844
                ["androidx.annotation:annotation": "@maven//:androidx_annotation_annotation_jvm"]
            )
            versionConflictPolicy = "pinned"
        }
        kotlin {
            httpArchiveRepository {
                url = "https://github.com/bazelbuild/rules_kotlin/releases/download/v1.8/rules_kotlin_release.tgz"
                sha256 = "01293740a16e474669aba5b5a1fe3d368de5832442f164e4fbfc566815a8bc3a"
            }
            compiler {
                tag = "1.8.10"
                sha = "4c3fa7bc1bb9ef3058a2319d8bcc3b7196079f88e92fdcd8d304a46f4b6b5787"
            }
            toolchain {
                enabled = true
                apiVersion = "1.7"
                reportUnusedDeps = "off"
                strictKotlinDeps = "off"
                abiJars = true
                multiplexWorkers = true
                languageVersion = "1.7"
                jvmTarget = "11"
            }
        }
        dagger {
            tag = "2.47"
            sha = "154cdfa4f6f552a9873e2b4448f7a80415cb3427c4c771a50c6a8a8b434ffd0a"
        }
    }
}

idea {
    module {
        excludeDirs += [
            file("bazel-bin"),
            file("bazel-grazel"),
            file("bazel-cache"),
            file("bazel-out"),
            file("bazel-testlogs"),
        ]
    }
}
